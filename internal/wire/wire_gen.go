// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/jobs/scheduler/infra/persistence/execution"
	"github.com/jobs/scheduler/infra/persistence/task"
	"github.com/jobs/scheduler/infra/queries"
	"github.com/jobs/scheduler/internal/app/api"
	execution2 "github.com/jobs/scheduler/internal/app/biz/execution"
	task2 "github.com/jobs/scheduler/internal/app/biz/task"
	"github.com/jobs/scheduler/internal/app/service"
	"go.uber.org/zap"
	"gorm.io/gorm"
)

// Injectors from wire.go:

// ProvideApplication 提供完整应用程序
func ProvideApplication(db *gorm.DB, logger *zap.Logger) (*api.Router, error) {
	repository := task.NewMysqlRepository(db)
	useCase := task2.NewUseCase(repository)
	iQueryService := queries.NewTaskQueryService(db)
	taskService := service.NewTaskService(useCase, iQueryService)
	executionRepository := execution.NewMysqlRepository(db)
	executionService := execution2.NewDomainService(executionRepository)
	executionUseCase := execution2.NewUseCase(executionRepository, executionService)
	executionviewIQueryService := queries.NewExecutionQueryService(db)
	serviceExecutionService := service.NewExecutionService(executionUseCase, executionviewIQueryService)
	router := api.NewRouter(taskService, serviceExecutionService)
	return router, nil
}
